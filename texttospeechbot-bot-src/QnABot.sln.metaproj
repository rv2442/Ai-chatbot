<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="Current" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" InitialTargets="ValidateSolutionConfiguration;ValidateToolsVersions;ValidateProjects" DefaultTargets="Build">
  <PropertyGroup>
    <RoslynTargetsPath>C:\Program Files\dotnet\sdk\5.0.102\Roslyn</RoslynTargetsPath>
    <VisualStudioVersion>16.0</VisualStudioVersion>
    <_DirectorySolutionPropsFile>Directory.Solution.props</_DirectorySolutionPropsFile>
    <_DirectorySolutionPropsBasePath />
    <Configuration>Debug</Configuration>
    <Platform>Any CPU</Platform>
    <AspNetConfiguration>Debug</AspNetConfiguration>
    <SolutionDir>C:\__w\1\s\BotAppTemplates\CSharp-ABS-WebApp-V4\QnABot\</SolutionDir>
    <SolutionExt>.sln</SolutionExt>
    <SolutionFileName>QnABot.sln</SolutionFileName>
    <SolutionName>QnABot</SolutionName>
    <SolutionPath>C:\__w\1\s\BotAppTemplates\CSharp-ABS-WebApp-V4\QnABot\QnABot.sln</SolutionPath>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <CurrentSolutionConfigurationContents>
      <SolutionConfiguration xmlns="">
  <ProjectConfiguration Project="{011BF8E5-6C91-4D05-A1CB-4AD6637DA400}" AbsolutePath="C:\__w\1\s\BotAppTemplates\CSharp-ABS-WebApp-V4\QnABot\QnABot.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
</SolutionConfiguration>
    </CurrentSolutionConfigurationContents>
    <MicrosoftNETBuildTasksDirectoryRoot>C:\Program Files\dotnet\sdk\5.0.102\Sdks\Microsoft.NET.Sdk\targets\..\tools\</MicrosoftNETBuildTasksDirectoryRoot>
    <MicrosoftNETBuildTasksTFM>net5.0</MicrosoftNETBuildTasksTFM>
    <MicrosoftNETBuildTasksDirectory>C:\Program Files\dotnet\sdk\5.0.102\Sdks\Microsoft.NET.Sdk\targets\..\tools\net5.0/</MicrosoftNETBuildTasksDirectory>
    <MicrosoftNETBuildTasksAssembly>C:\Program Files\dotnet\sdk\5.0.102\Sdks\Microsoft.NET.Sdk\targets\..\tools\net5.0/Microsoft.NET.Build.Tasks.dll</MicrosoftNETBuildTasksAssembly>
    <DefaultImplicitPackages>Microsoft.NETCore.App;NETStandard.Library</DefaultImplicitPackages>
    <DotnetCliToolTargetFramework>netcoreapp2.2</DotnetCliToolTargetFramework>
    <NuGetRestoreTargets>C:\Program Files\dotnet\sdk\5.0.102\\NuGet.targets</NuGetRestoreTargets>
    <IsRestoreTargetsFileLoaded>true</IsRestoreTargetsFileLoaded>
    <RestoreTaskAssemblyFile>NuGet.Build.Tasks.dll</RestoreTaskAssemblyFile>
    <HideWarningsAndErrors>false</HideWarningsAndErrors>
    <RestoreRecursive>true</RestoreRecursive>
    <MSBuildAllProjects>C:\__w\1\s\BotAppTemplates\CSharp-ABS-WebApp-V4\QnABot\QnABot.sln.metaproj;;C:\Program Files\dotnet\sdk\5.0.102\NuGet.targets</MSBuildAllProjects>
    <RestoreUseSkipNonexistentTargets>true</RestoreUseSkipNonexistentTargets>
    <ValidateRuntimeIdentifierCompatibility>false</ValidateRuntimeIdentifierCompatibility>
    <RestoreContinueOnError>WarnAndContinue</RestoreContinueOnError>
    <RestoreBuildInParallel>true</RestoreBuildInParallel>
    <_RestoreSolutionFileUsed>true</_RestoreSolutionFileUsed>
    <NuGetInteractive />
    <PackageDownloadSupported>true</PackageDownloadSupported>
    <GetReferenceNearestTargetFrameworkTaskSupportsTargetPlatformParameter>true</GetReferenceNearestTargetFrameworkTaskSupportsTargetPlatformParameter>
    <_GenerateRestoreGraphProjectEntryInputProperties>
      ExcludeRestorePackageImports=true;
      _RestoreSolutionFileUsed=true;
      SolutionDir=C:\__w\1\s\BotAppTemplates\CSharp-ABS-WebApp-V4\QnABot\;
      SolutionName=QnABot;
      SolutionFileName=QnABot.sln;
      SolutionPath=C:\__w\1\s\BotAppTemplates\CSharp-ABS-WebApp-V4\QnABot\QnABot.sln;
      SolutionExt=.sln;
    </_GenerateRestoreGraphProjectEntryInputProperties>
    <_DirectorySolutionTargetsFile>Directory.Solution.targets</_DirectorySolutionTargetsFile>
    <_DirectorySolutionTargetsBasePath />
  </PropertyGroup>
  <ItemDefinitionGroup />
  <ItemGroup>
    <SolutionConfiguration Include="Debug|Any CPU">
      <Content>
        <SolutionConfiguration xmlns="">
  <ProjectConfiguration Project="{011BF8E5-6C91-4D05-A1CB-4AD6637DA400}" AbsolutePath="C:\__w\1\s\BotAppTemplates\CSharp-ABS-WebApp-V4\QnABot\QnABot.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
</SolutionConfiguration>
      </Content>
      <Platform>Any CPU</Platform>
      <Configuration>Debug</Configuration>
    </SolutionConfiguration>
    <SolutionConfiguration Include="Release|Any CPU">
      <Content>
        <SolutionConfiguration xmlns="">
  <ProjectConfiguration Project="{011BF8E5-6C91-4D05-A1CB-4AD6637DA400}" AbsolutePath="C:\__w\1\s\BotAppTemplates\CSharp-ABS-WebApp-V4\QnABot\QnABot.csproj" BuildProjectInSolution="True">Release|AnyCPU</ProjectConfiguration>
</SolutionConfiguration>
      </Content>
      <Platform>Any CPU</Platform>
      <Configuration>Release</Configuration>
    </SolutionConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:\__w\1\s\BotAppTemplates\CSharp-ABS-WebApp-V4\QnABot\QnABot.csproj">
      <AdditionalProperties>Configuration=Debug; Platform=AnyCPU</AdditionalProperties>
      <Platform>AnyCPU</Platform>
      <Configuration>Debug</Configuration>
      <ToolsVersion>
      </ToolsVersion>
      <SkipNonexistentProjects>False</SkipNonexistentProjects>
    </ProjectReference>
  </ItemGroup>
  <Target Name="ValidateSolutionConfiguration">
    <Error Condition="('$(CurrentSolutionConfigurationContents)' == '') and ('$(SkipInvalidConfigurations)' != 'true')" HelpKeyword="MSBuild.SolutionInvalidSolutionConfiguration" Text="The specified solution configuration &quot;$(Configuration)|$(Platform)&quot; is invalid. Please specify a valid solution configuration using the Configuration and Platform properties (e.g. MSBuild.exe Solution.sln /p:Configuration=Debug /p:Platform=&quot;Any CPU&quot;) or leave those properties blank to use the default solution configuration." Code="MSB4126" />
    <Warning Condition="('$(CurrentSolutionConfigurationContents)' == '') and ('$(SkipInvalidConfigurations)' == 'true')" HelpKeyword="MSBuild.SolutionInvalidSolutionConfiguration" Text="The specified solution configuration &quot;$(Configuration)|$(Platform)&quot; is invalid. Please specify a valid solution configuration using the Configuration and Platform properties (e.g. MSBuild.exe Solution.sln /p:Configuration=Debug /p:Platform=&quot;Any CPU&quot;) or leave those properties blank to use the default solution configuration." Code="MSB4126" />
    <Message Condition="'$(CurrentSolutionConfigurationContents)' != ''" Text="Building solution configuration &quot;$(Configuration)|$(Platform)&quot;." />
  </Target>
  <Target Name="Restore" DependsOnTargets="_GenerateRestoreGraph">
    <RemoveDuplicates Inputs="@(_RestoreGraphEntry)">
      <Output TaskParameter="Filtered" ItemName="_RestoreGraphEntryFiltered" />
    </RemoveDuplicates>
    <RestoreTask RestoreForceEvaluate="$(RestoreForceEvaluate)" RestoreForce="$(RestoreForce)" RestoreNoCache="$(RestoreNoCache)" Interactive="$(NuGetInteractive)" HideWarningsAndErrors="$(HideWarningsAndErrors)" RestoreGraphItems="@(_RestoreGraphEntryFiltered)" RestorePackagesConfig="$(RestorePackagesConfig)" RestoreRecursive="$(RestoreRecursive)" RestoreDisableParallel="$(RestoreDisableParallel)" RestoreIgnoreFailedSources="$(RestoreIgnoreFailedSources)" />
  </Target>
  <Target Name="ValidateToolsVersions">
    <Error Condition="'$(MSBuildToolsVersion)' == '2.0' and ('$(ProjectToolsVersion)' != '2.0' and '$(ProjectToolsVersion)' != '')" HelpKeyword="MSBuild.SolutionToolsVersionDoesNotSupportProjectToolsVersion" Text="The tools version &quot;$(MSBuildToolsVersion)&quot; of the solution does not support building projects with a different tools version." Code="MSB4149" />
  </Target>
  <Target Name="ValidateProjects" />
  <Target Name="GetSolutionConfigurationContents" Outputs="$(SolutionConfigurationContents)" />
  <Target Name="GetTargetFrameworkProperties" Returns="TargetFramework=$(NearestTargetFramework);ProjectHasSingleTargetFramework=$(_HasSingleTargetFramework);ProjectIsRidAgnostic=$(_IsRidAgnostic)">
    <GetNearestTargetFramework Condition="'$(_SkipNearestTargetFrameworkResolution)' != 'true'" PossibleTargetFrameworks="$(_PossibleTargetFrameworks)" ReferringTargetFramework="$(ReferringTargetFramework)" ProjectFilePath="$(MSBuildProjectFullPath)">
      <Output TaskParameter="NearestTargetFramework" ItemName="NearestTargetFramework" />
    </GetNearestTargetFramework>
  </Target>
  <Target Name="_CheckForSolutionLevelRuntimeIdentifier" Condition="'$(RuntimeIdentifier)' != ''">
    <NETSdkError ResourceName="CannotHaveSolutionLevelRuntimeIdentifier" />
  </Target>
  <Target Name="GenerateRestoreGraphFile" DependsOnTargets="_GenerateRestoreGraph">
    <Error Condition="$(RestoreGraphOutputPath) == ''" Text="Missing RestoreGraphOutputPath property!" />
    <RemoveDuplicates Inputs="@(_RestoreGraphEntry)">
      <Output TaskParameter="Filtered" ItemName="_RestoreGraphEntryFiltered" />
    </RemoveDuplicates>
    <WriteRestoreGraphTask RestoreGraphOutputPath="$(RestoreGraphOutputPath)" RestoreGraphItems="@(_RestoreGraphEntryFiltered)" RestoreRecursive="$(RestoreRecursive)" />
  </Target>
  <Target Name="CollectPackageReferences" Returns="@(PackageReference)" />
  <Target Name="CollectCentralPackageVersions" Returns="@(PackageVersion)" />
  <Target Name="CollectPackageDownloads" Returns="@(PackageDownload)" />
  <Target Name="CollectFrameworkReferences" Returns="@(FrameworkReference)" />
  <Target Name="_LoadRestoreGraphEntryPoints" Returns="@(RestoreGraphProjectInputItems)">
    <GetRestoreSolutionProjectsTask Condition=" $(MSBuildProjectFullPath.EndsWith('.metaproj')) == 'true' AND @(RestoreGraphProjectInputItems) == '' " ProjectReferences="@(ProjectReference)" SolutionFilePath="$(MSBuildProjectFullPath)">
      <Output TaskParameter="OutputProjectReferences" ItemName="RestoreGraphProjectInputItems" />
    </GetRestoreSolutionProjectsTask>
  </Target>
  <Target Name="_FilterRestoreGraphProjectInputItems" DependsOnTargets="_LoadRestoreGraphEntryPoints" Returns="@(FilteredRestoreGraphProjectInputItems)">
    <RemoveDuplicates Inputs="@(_FilteredRestoreGraphProjectInputItemsTmp)">
      <Output TaskParameter="Filtered" ItemName="FilteredRestoreGraphProjectInputItemsWithoutDuplicates" />
    </RemoveDuplicates>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' == 'true' " Targets="_IsProjectRestoreSupported" BuildInParallel="$(RestoreBuildInParallel)" Projects="@(FilteredRestoreGraphProjectInputItemsWithoutDuplicates)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" SkipNonexistentTargets="true">
      <Output TaskParameter="TargetOutputs" ItemName="FilteredRestoreGraphProjectInputItems" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' != 'true' " ContinueOnError="$(RestoreContinueOnError)" Targets="_IsProjectRestoreSupported" Projects="@(FilteredRestoreGraphProjectInputItemsWithoutDuplicates)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="FilteredRestoreGraphProjectInputItems" />
    </MSBuild>
    <WarnForInvalidProjectsTask Condition=" '$(DisableWarnForInvalidRestoreProjects)' != 'true' AND '$(HideWarningsAndErrors)' != 'true' " ValidProjects="@(FilteredRestoreGraphProjectInputItems)" AllProjects="@(FilteredRestoreGraphProjectInputItemsWithoutDuplicates)" />
  </Target>
  <Target Name="_GenerateRestoreGraph" DependsOnTargets="_FilterRestoreGraphProjectInputItems;_GetAllRestoreProjectPathItems" Returns="@(_RestoreGraphEntry)">
    <Message Importance="low" Text="Generating dg file" />
    <Message Importance="low" Text="%(_RestoreProjectPathItems.Identity)" />
    <MSBuild Targets="_GenerateRestoreGraphProjectEntry" BuildInParallel="$(RestoreBuildInParallel)" Projects="@(_GenerateRestoreGraphProjectEntryInput)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreGraphEntry" />
    </MSBuild>
    <MSBuild Targets="_GenerateProjectRestoreGraph" BuildInParallel="$(RestoreBuildInParallel)" Projects="@(_RestoreProjectPathItems)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreGraphEntry" />
    </MSBuild>
  </Target>
  <Target Name="_GenerateRestoreGraphProjectEntry" DependsOnTargets="_GenerateRestoreSpecs;_GenerateDotnetCliToolReferenceSpecs" Returns="@(_RestoreGraphEntry)" />
  <Target Name="_GenerateRestoreSpecs" DependsOnTargets="_GetRestoreProjectStyle" Returns="@(_RestoreGraphEntry)">
    <Message Importance="low" Text="Restore entry point $(MSBuildProjectFullPath)" />
  </Target>
  <Target Name="_GenerateDotnetCliToolReferenceSpecs" DependsOnTargets="_GetRestoreSettings" Returns="@(_RestoreGraphEntry)">
    <GetRestoreDotnetCliToolsTask Condition=" '$(RestoreDotnetCliToolReferences)' == '' OR '$(RestoreDotnetCliToolReferences)' == 'true' " RestorePackagesPath="$(_OutputPackagesPath)" RestoreConfigFilePaths="$(_OutputConfigFilePaths)" ToolFramework="$(DotnetCliToolTargetFramework)" ProjectPath="$(MSBuildProjectFullPath)" DotnetCliToolReferences="@(DotnetCliToolReference)" RestoreFallbackFolders="$(_OutputFallbackFolders)" RestoreSources="$(_OutputSources)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestoreDotnetCliToolsTask>
  </Target>
  <Target Name="_GetProjectJsonPath" Returns="$(_CurrentProjectJsonPath)">
    <GetRestoreProjectJsonPathTask Condition=" '$(RestoreProjectStyle)' == 'ProjectJson' OR '$(RestoreProjectStyle)' == '' " ProjectPath="$(MSBuildProjectFullPath)">
      <Output TaskParameter="ProjectJsonPath" ItemName="_CurrentProjectJsonPath" />
    </GetRestoreProjectJsonPathTask>
  </Target>
  <Target Name="_GetRestoreProjectStyle" DependsOnTargets="_GetProjectJsonPath;CollectPackageReferences" Returns="$(RestoreProjectStyle);$(PackageReferenceCompatibleProjectStyle)">
    <GetRestoreProjectStyleTask ProjectJsonPath="$(_CurrentProjectJsonPath)" RestoreProjectStyle="$(RestoreProjectStyle)" MSBuildProjectName="$(MSBuildProjectName)" HasPackageReferenceItems="$(_HasPackageReferenceItems)" MSBuildProjectDirectory="$(MSBuildProjectDirectory)">
      <Output TaskParameter="ProjectStyle" ItemName="RestoreProjectStyle" />
      <Output TaskParameter="IsPackageReferenceCompatibleProjectStyle" ItemName="PackageReferenceCompatibleProjectStyle" />
    </GetRestoreProjectStyleTask>
  </Target>
  <Target Name="EnableIntermediateOutputPathMismatchWarning" Condition="'$(RestoreProjectStyle)' == 'PackageReference'" DependsOnTargets="_GetRestoreProjectStyle" />
  <Target Name="_GetRestoreTargetFrameworksOutput" DependsOnTargets="_GetRestoreProjectStyle" Returns="@(_RestoreTargetFrameworksOutputFiltered)">
    <GetProjectTargetFrameworksTask Condition=" '$(RestoreProjectStyle)' != 'ProjectJson' OR '$(PackageReferenceCompatibleProjectStyle)' == 'true' " TargetPlatformIdentifier="$(TargetPlatformIdentifier)" TargetFrameworks="$(TargetFrameworks)" TargetPlatformVersion="$(TargetPlatformVersion)" TargetPlatformMinVersion="$(TargetPlatformMinVersion)" TargetFramework="$(TargetFramework)" ProjectPath="$(MSBuildProjectFullPath)" TargetFrameworkMoniker="$(TargetFrameworkMoniker)">
      <Output TaskParameter="ProjectTargetFrameworks" ItemName="_RestoreProjectFramework" />
    </GetProjectTargetFrameworksTask>
  </Target>
  <Target Name="_GetRestoreTargetFrameworksAsItems" DependsOnTargets="_GetRestoreProjectStyle" Returns="@(_RestoreTargetFrameworkItems)" />
  <Target Name="_GetRestoreSettings" Condition=" '$(RestoreProjectStyle)' == 'PackageReference' OR '$(RestoreProjectStyle)' == 'ProjectJson' OR '$(RestoreProjectStyle)' == 'DotnetToolReference' OR '$(RestoreProjectStyle)' == 'PackagesConfig'" DependsOnTargets="_GetRestoreSettingsOverrides;_GetRestoreSettingsCurrentProject;_GetRestoreSettingsAllFrameworks" Returns="$(_OutputSources);$(_OutputPackagesPath);$(_OutputRepositoryPath);$(_OutputFallbackFolders);$(_OutputConfigFilePaths)">
    <GetRestoreSettingsTask RestorePackagesPath="$(RestorePackagesPath)" RestoreProjectStyle="$(RestoreProjectStyle)" RestoreConfigFile="$(RestoreConfigFile)" RestoreRepositoryPathOverride="$(_RestoreRepositoryPathOverride)" RestoreRootConfigDirectory="$(RestoreRootConfigDirectory)" RestoreSolutionDirectory="$(RestoreSolutionDirectory)" RestoreSourcesOverride="$(_RestoreSourcesOverride)" RestoreFallbackFoldersOverride="$(_RestoreFallbackFoldersOverride)" RestorePackagesPathOverride="$(_RestorePackagesPathOverride)" ProjectUniqueName="$(MSBuildProjectFullPath)" RestoreSettingsPerFramework="@(_RestoreSettingsPerFramework)" MSBuildStartupDirectory="$(MSBuildStartupDirectory)" RestoreRepositoryPath="$(RestoreRepositoryPath)" RestoreFallbackFolders="$(RestoreFallbackFolders)" RestoreSources="$(RestoreSources)">
      <Output TaskParameter="OutputSources" ItemName="_OutputSources" />
      <Output TaskParameter="OutputPackagesPath" ItemName="_OutputPackagesPath" />
      <Output TaskParameter="OutputRepositoryPath" ItemName="_OutputRepositoryPath" />
      <Output TaskParameter="OutputFallbackFolders" ItemName="_OutputFallbackFolders" />
      <Output TaskParameter="OutputConfigFilePaths" ItemName="_OutputConfigFilePaths" />
    </GetRestoreSettingsTask>
  </Target>
  <Target Name="_GetRestoreSettingsCurrentProject" Condition=" '$(TargetFrameworks)' == '' AND '$(PackageReferenceCompatibleProjectStyle)' == 'true' " DependsOnTargets="_GetRestoreSettingsPerFramework" Returns="@(_RestoreSettingsPerFramework)" />
  <Target Name="_GetRestoreSettingsAllFrameworks" Condition=" '$(TargetFrameworks)' != '' AND '$(PackageReferenceCompatibleProjectStyle)' == 'true' " DependsOnTargets="_GetRestoreTargetFrameworksAsItems;_GetRestoreProjectStyle" Returns="@(_RestoreSettingsPerFramework)">
    <MSBuild Targets="_GetRestoreSettingsPerFramework" BuildInParallel="$(RestoreBuildInParallel)" Projects="$(MSBuildProjectFullPath)" Properties="TargetFramework=%(_RestoreTargetFrameworkItems.Identity);&#xD;&#xA;                  $(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreSettingsPerFramework" />
    </MSBuild>
  </Target>
  <Target Name="_GetRestoreSettingsPerFramework" Returns="@(_RestoreSettingsPerFramework)" />
  <Target Name="_GenerateRestoreProjectSpec" DependsOnTargets="_GetRestoreProjectStyle;_GetRestoreTargetFrameworksOutput;_GetRestoreSettings" Returns="@(_RestoreGraphEntry)">
    <ConvertToAbsolutePath Condition=" '$(PackageReferenceCompatibleProjectStyle)' == 'true' OR '$(RestoreProjectStyle)' == 'ProjectJson'" Paths="$(RestoreOutputPath)">
      <Output TaskParameter="AbsolutePaths" ItemName="RestoreOutputAbsolutePath" />
    </ConvertToAbsolutePath>
  </Target>
  <Target Name="_GenerateProjectRestoreGraph" DependsOnTargets="&#xD;&#xA;      _GetRestoreProjectStyle;&#xD;&#xA;      _GenerateRestoreProjectSpec;&#xD;&#xA;      _GenerateRestoreDependencies" Returns="@(_RestoreGraphEntry)" />
  <Target Name="_GenerateRestoreDependencies" DependsOnTargets="_GenerateProjectRestoreGraphAllFrameworks;_GenerateProjectRestoreGraphCurrentProject" Returns="@(_RestoreGraphEntry)" />
  <Target Name="_GenerateProjectRestoreGraphAllFrameworks" Condition=" '$(TargetFrameworks)' != '' " DependsOnTargets="_GetRestoreTargetFrameworksAsItems" Returns="@(_RestoreGraphEntry)">
    <MSBuild Targets="_GenerateProjectRestoreGraphPerFramework" BuildInParallel="$(RestoreBuildInParallel)" Projects="$(MSBuildProjectFullPath)" Properties="TargetFramework=%(_RestoreTargetFrameworkItems.Identity);&#xD;&#xA;                  $(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreGraphEntry" />
    </MSBuild>
  </Target>
  <Target Name="_GenerateProjectRestoreGraphCurrentProject" Condition=" '$(TargetFrameworks)' == '' " DependsOnTargets="_GenerateProjectRestoreGraphPerFramework" Returns="@(_RestoreGraphEntry)" />
  <Target Name="_GenerateProjectRestoreGraphPerFramework" DependsOnTargets="_GetRestoreProjectStyle;CollectPackageReferences;CollectPackageDownloads;CollectFrameworkReferences;CollectCentralPackageVersions" Returns="@(_RestoreGraphEntry)">
    <GetRestoreProjectReferencesTask ParentProjectPath="$(MSBuildProjectFullPath)" TargetFrameworks="$(TargetFramework)" ProjectReferences="@(ProjectReference)" ProjectUniqueName="$(MSBuildProjectFullPath)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestoreProjectReferencesTask>
    <GetRestorePackageReferencesTask Condition=" '$(PackageReferenceCompatibleProjectStyle)' == 'true' " TargetFrameworks="$(TargetFramework)" PackageReferences="@(PackageReference)" ProjectUniqueName="$(MSBuildProjectFullPath)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestorePackageReferencesTask>
    <GetCentralPackageVersionsTask Condition=" '$(PackageReferenceCompatibleProjectStyle)' == 'true' AND '$(_CentralPackageVersionsEnabled)' == 'true' " TargetFrameworks="$(TargetFramework)" CentralPackageVersions="@(PackageVersion)" ProjectUniqueName="$(MSBuildProjectFullPath)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetCentralPackageVersionsTask>
    <GetRestorePackageDownloadsTask Condition=" '$(PackageReferenceCompatibleProjectStyle)' == 'true' " TargetFrameworks="$(TargetFramework)" PackageDownloads="@(PackageDownload)" ProjectUniqueName="$(MSBuildProjectFullPath)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestorePackageDownloadsTask>
    <GetRestoreFrameworkReferencesTask Condition=" '$(PackageReferenceCompatibleProjectStyle)' == 'true' " TargetFrameworks="$(TargetFramework)" FrameworkReferences="@(FrameworkReference)" ProjectUniqueName="$(MSBuildProjectFullPath)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestoreFrameworkReferencesTask>
  </Target>
  <Target Name="_GenerateRestoreProjectPathItemsCurrentProject" Condition=" '$(TargetFrameworks)' == '' " DependsOnTargets="_GenerateRestoreProjectPathItemsPerFramework" Returns="@(_RestoreProjectPathItems)" />
  <Target Name="_GenerateRestoreProjectPathItemsPerFramework" Returns="@(_RestoreProjectPathItems)">
    <ConvertToAbsolutePath Paths="@(ProjectReference)">
      <Output TaskParameter="AbsolutePaths" ItemName="_RestoreGraphAbsoluteProjectPaths" />
    </ConvertToAbsolutePath>
  </Target>
  <Target Name="_GenerateRestoreProjectPathItems" DependsOnTargets="_GenerateRestoreProjectPathItemsAllFrameworks;_GenerateRestoreProjectPathItemsCurrentProject" Returns="@(_CurrentRestoreProjectPathItems)">
    <RemoveDuplicates Inputs="@(_RestoreProjectPathItems)">
      <Output TaskParameter="Filtered" ItemName="_CurrentRestoreProjectPathItems" />
    </RemoveDuplicates>
  </Target>
  <Target Name="_GenerateRestoreProjectPathItemsAllFrameworks" Condition=" '$(TargetFrameworks)' != '' " DependsOnTargets="_GetRestoreTargetFrameworksAsItems" Returns="@(_RestoreProjectPathItems)">
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' == 'true' " Targets="_GenerateRestoreProjectPathItemsPerFramework" SkipNonexistentProjects="true" BuildInParallel="$(RestoreBuildInParallel)" Projects="$(MSBuildProjectFullPath)" Properties="TargetFramework=%(_RestoreTargetFrameworkItems.Identity);&#xD;&#xA;                  $(_GenerateRestoreGraphProjectEntryInputProperties)" SkipNonexistentTargets="true">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItems" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' != 'true' " ContinueOnError="$(RestoreContinueOnError)" Targets="_GenerateRestoreProjectPathItemsPerFramework" Projects="$(MSBuildProjectFullPath)" Properties="TargetFramework=%(_RestoreTargetFrameworkItems.Identity);&#xD;&#xA;                  $(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItems" />
    </MSBuild>
  </Target>
  <Target Name="_GenerateRestoreProjectPathWalk" DependsOnTargets="_GenerateRestoreProjectPathItems" Returns="@(_RestoreProjectPathItems)">
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' == 'true' " Targets="_GenerateRestoreProjectPathWalk" SkipNonexistentProjects="true" BuildInParallel="$(RestoreBuildInParallel)" Projects="@(_CurrentRestoreProjectPathItems)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" SkipNonexistentTargets="true">
      <Output TaskParameter="TargetOutputs" ItemName="_GenerateRestoreProjectPathWalkOutputs" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' != 'true' " ContinueOnError="$(RestoreContinueOnError)" Targets="_GenerateRestoreProjectPathWalk" Projects="@(_CurrentRestoreProjectPathItems)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="_GenerateRestoreProjectPathWalkOutputs" />
    </MSBuild>
    <RemoveDuplicates Inputs="@(_GenerateRestoreProjectPathWalkOutputs)">
      <Output TaskParameter="Filtered" ItemName="_RestoreProjectPathItems" />
    </RemoveDuplicates>
  </Target>
  <Target Name="_GetAllRestoreProjectPathItems" DependsOnTargets="_FilterRestoreGraphProjectInputItems" Returns="@(_RestoreProjectPathItems)">
    <NuGetMessageTask Importance="High" Name="DeterminingProjectsToRestore" />
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' == 'true' " Targets="_GenerateRestoreProjectPathWalk" SkipNonexistentProjects="true" BuildInParallel="$(RestoreBuildInParallel)" Projects="@(FilteredRestoreGraphProjectInputItems)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" SkipNonexistentTargets="true">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItemsOutputs" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' != 'true' " ContinueOnError="$(RestoreContinueOnError)" Targets="_GenerateRestoreProjectPathWalk" Projects="@(FilteredRestoreGraphProjectInputItems)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItemsOutputs" />
    </MSBuild>
    <RemoveDuplicates Inputs="@(_RestoreProjectPathItemsOutputs)">
      <Output TaskParameter="Filtered" ItemName="_RestoreProjectPathItemsWithoutDupes" />
    </RemoveDuplicates>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' == 'true' " Targets="_IsProjectRestoreSupported" SkipNonexistentProjects="true" BuildInParallel="$(RestoreBuildInParallel)" Projects="@(_RestoreProjectPathItemsWithoutDupes)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" SkipNonexistentTargets="true">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItems" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' != 'true' " ContinueOnError="$(RestoreContinueOnError)" Targets="_IsProjectRestoreSupported" Projects="@(_RestoreProjectPathItemsWithoutDupes)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItems" />
    </MSBuild>
  </Target>
  <Target Name="_GetRestoreSettingsOverrides" Returns="$(_RestorePackagesPathOverride);$(_RestoreRepositoryPathOverride);$(_RestoreSourcesOverride);$(_RestoreFallbackFoldersOverride)">
    <MSBuild Condition=" '$(RestorePackagesPath)' != '' " Targets="_GetRestorePackagesPathOverride" BuildInParallel="$(RestoreBuildInParallel)" Projects="$(MSBuildThisFileFullPath)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestorePackagesPathOverride" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreRepositoryPathOverride)' != '' " Targets="_GetRestoreRepositoryPathOverride" BuildInParallel="$(RestoreBuildInParallel)" Projects="$(MSBuildThisFileFullPath)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreRepositoryPathOverride" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreSources)' != '' " Targets="_GetRestoreSourcesOverride" BuildInParallel="$(RestoreBuildInParallel)" Projects="$(MSBuildThisFileFullPath)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreSourcesOverride" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreFallbackFolders)' != '' " Targets="_GetRestoreFallbackFoldersOverride" BuildInParallel="$(RestoreBuildInParallel)" Projects="$(MSBuildThisFileFullPath)">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreFallbackFoldersOverride" />
    </MSBuild>
  </Target>
  <Target Name="_GetRestorePackagesPathOverride" Returns="$(_RestorePackagesPathOverride)" />
  <Target Name="_GetRestoreRepositoryPathOverride" Returns="$(_RestoreRepositoryPathOverride)" />
  <Target Name="_GetRestoreSourcesOverride" Returns="$(_RestoreSourcesOverride)" />
  <Target Name="_GetRestoreFallbackFoldersOverride" Returns="$(_RestoreFallbackFoldersOverride)" />
  <Target Name="_IsProjectRestoreSupported" Returns="@(_ValidProjectsForRestore)" />
  <Target Name="Build" Outputs="@(CollectedBuildOutput)">
    <MSBuild SkipNonexistentProjects="%(ProjectReference.SkipNonexistentProjects)" BuildInParallel="True" Projects="@(ProjectReference)" Properties="BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="Clean">
    <MSBuild Targets="Clean" SkipNonexistentProjects="%(ProjectReference.SkipNonexistentProjects)" BuildInParallel="True" Projects="@(ProjectReference-&gt;Reverse())" Properties="BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" />
  </Target>
  <Target Name="Rebuild" Outputs="@(CollectedBuildOutput)">
    <MSBuild Targets="Rebuild" SkipNonexistentProjects="%(ProjectReference.SkipNonexistentProjects)" BuildInParallel="True" Projects="@(ProjectReference)" Properties="BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="Publish">
    <MSBuild Targets="Publish" SkipNonexistentProjects="%(ProjectReference.SkipNonexistentProjects)" BuildInParallel="True" Projects="@(ProjectReference)" Properties="BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" />
  </Target>
  <Target Name="QnABot" Outputs="@(QnABotBuildOutput)">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'C:\__w\1\s\BotAppTemplates\CSharp-ABS-WebApp-V4\QnABot\QnABot.csproj'" ToolsVersion="$(ProjectToolsVersion)" BuildInParallel="True" Projects="@(ProjectReference)" Properties="Configuration=Debug; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)">
      <Output TaskParameter="TargetOutputs" ItemName="QnABotBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="QnABot:Clean">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'C:\__w\1\s\BotAppTemplates\CSharp-ABS-WebApp-V4\QnABot\QnABot.csproj'" ToolsVersion="$(ProjectToolsVersion)" Targets="Clean" BuildInParallel="True" Projects="@(ProjectReference)" Properties="Configuration=Debug; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" />
  </Target>
  <Target Name="QnABot:Rebuild" Outputs="@(QnABotBuildOutput)">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'C:\__w\1\s\BotAppTemplates\CSharp-ABS-WebApp-V4\QnABot\QnABot.csproj'" ToolsVersion="$(ProjectToolsVersion)" Targets="Rebuild" BuildInParallel="True" Projects="@(ProjectReference)" Properties="Configuration=Debug; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)">
      <Output TaskParameter="TargetOutputs" ItemName="QnABotBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="QnABot:Publish">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'C:\__w\1\s\BotAppTemplates\CSharp-ABS-WebApp-V4\QnABot\QnABot.csproj'" ToolsVersion="$(ProjectToolsVersion)" Targets="Publish" BuildInParallel="True" Projects="@(ProjectReference)" Properties="Configuration=Debug; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" />
  </Target>
</Project>